[user]
  autocrlf = false
  name = mainyaa
  email = mainya@gmail.com

[alias]
  co = checkout
  ci = commit
  st = status
  br = branch

[merge]
  tool = p4merge
  ff = false

[mergetool]
  keepBackup = false

[mergetool "p4merge"]
  path = p4merge
  keepTemporaries = false
  trustExitCode = false

[core]
  editor = /usr/bin/vim
  excludesfile = ~/.gitignore_global

[browse-remote "github.com"]
  top = https://{host}/{path}
  ref = https://{host}/{path}/tree/{short_ref}
  rev = https://{host}/{path}/commit/{commit}

[browse-remote "redmine.ne.jp"]
  top = https://{host}/{path}
  ref = https://{host}/{path}/tree/{short_ref}
  rev = https://{host}/{path}/commit/{commit}

[web]
  browser = open

[browser "chrome"]
  cmd = open -a 'Google Chrome.app'

[interactive]
  singlekey = true

[difftool "sourcetree"]
  cmd = opendiff \"$LOCAL\" \"$REMOTE\"
  path = 

[mergetool "sourcetree"]
  cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
  trustExitCode = true

[github]
  user = mainyaa

[color]
  ui = true

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[branch]
  autosetuprebase = always

[push]
  default = current

[alias]
  # add
  a = add                           # add
  chunkyadd = add --patch           # stage commits chunk by chunk

  # branch
  b = branch -v                     # branch (verbose)

  # commit
  c = commit -m                     # commit with message
  ca = commit -am                   # commit all with message
  ci = commit                       # commit
  amend = commit --amend            # ammend your last commit
  ammend = commit --amend           # ammend your last commit

  # checkout
  co = checkout                     # checkout
  nb = checkout -b                  # create and switch to a new branch (mnemonic: "git new branch branchname...")

  # cherry-pick
  cp = cherry-pick -x               # grab a change from a branch

  # diff
  d = diff                          # diff unstaged changes
  dc = diff --cached                # diff staged changes
  last = diff HEAD^                 # diff last committed change

  # log
  l = log --graph --date=short
  changes = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" --name-status
  short = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\"
  changelog = log --pretty=format:\" * %s\"
  shortnocolor = log --pretty=format:\"%h %cr %cn %s\"
  hist = log --pretty=format:\\\"%h %ad | %s%d [%an]\\\" --graph --date=short

  # pull
  pl = pull                         # pull

  # push
  ps = push                         # push

  # rebase
  rc = rebase --continue            # continue rebase
  rs = rebase --skip                # skip rebase

  # remote
  r = remote -v                     # show remotes (verbose)

  # reset
  unstage = reset HEAD              # remove files from index (tracking)
  uncommit = reset --soft HEAD^     # go back before last commit, with files in uncommitted state
  filelog = log -u                  # show changes to a file
  mt = mergetool                    # fire up the merge tool

  # stash
  ss = stash                        # stash changes
  sl = stash list                   # list stashes
  sa = stash apply                  # apply stash (restore changes)
  sd = stash drop                   # drop stashes (destory changes)

  # status
  s = status                        # status
  st = status                       # status
  stat = status                     # status

  # tag
  t = tag -n                        # show tags with <n> lines of each tag message

  lastday = log --author="mainyaa" --pretty=oneline --all --since='1 days ago'
  lastfriday = log --author="mainyaa" --pretty=oneline --all --since='1 weeks ago'

  # svn helpers
  svnr = svn rebase
  svnd = svn dcommit
  svnl = svn log --oneline --show-commit

[format]
  pretty = format:%C(blue)%ad%Creset %C(yellow)%h%C(green)%d%Creset %C(blue)%s %C(magenta) [%an]%Creset

[merge]
  summary = true
  verbosity = 1

[branch]
  autosetupmerge = true

[apply]
  whitespace = nowarn

[push]
  # 'git push' will push the current branch to its tracking branch
  # the usual default is to push all branches
  default = tracking

[diff]
  # Git diff will use (i)ndex, (w)ork tree, (c)ommit and (o)bject
  # instead of a/b/c/d as prefixes for patches
  mnemonicprefix = true
[rerere]
  # Remember my merges
  # http://gitfu.wordpress.com/2008/04/20/git-rerere-rereremember-what-you-did-last-time/
  enabled = true

[help]
  autocorrect = 1
